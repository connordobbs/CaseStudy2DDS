fig.align = "center",
message = FALSE,
warning = FALSE)
```
```{r, include = FALSE}
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(skimr)
library(GGally)
library(viridis)
library(corrplot)
library(glue)
library(class)
library(caret)
library(e1071)
```
# Introduction:
#### The CEO AND CFO have tasked outside consultant Connor Dobbs to investigate Employee Attrition and Income trends.
#### With the rising importance of employee rentention in the current labor market, there have been a few specific goals outlined for this research to help minimize attrition and maintain Frito-Lay's strong talent pool.
1. Identify the three most important factors associated with attrition
1. Identify the most important factors associated with employee income
1. Identify any other potentially useful trends or patterns within the data
1. Develop a model to predict employee attrition
1. Develop a model to predict Monthly Income
#### A conclusion summary can be skipped to via the table of contents to the left.
---
# Tools used
#### Human Resources has kindly provided the dataset to be used for this analysis. Data visulizations were used to explore the data and relationships within it.
#### Statistical methods used include: KNN classification, linear regression, and Naive-Bayes classification
#### Additional questions about the results can be directed towards Connor Dobbs via e-mail: dobbs@smu.edu
##### *Note, all code chunks are hidden by default. There is an option to the right of each chunk to expand/collapse. You can also expand/collapse all with the Code button on the top right of this document.
---
# Initial Steps:
Begin by loading the data and initial cleaning. There is no missing values which is good, however there are some variables that appear to be of no use to be removed.
```{r}
#load in hr data
hrdf <- read.csv('Data/CaseStudy2-data.csv')
#check for NA, get familiar with distributions
skim(hrdf)
# Changing the datatype to factors for relevant variables
cols <- c("Education", "EnvironmentSatisfaction", "JobInvolvement", "JobLevel",
"JobSatisfaction", "PerformanceRating", "RelationshipSatisfaction",
"StockOptionLevel", "TrainingTimesLastYear", "WorkLifeBalance",
"Attrition", "BusinessTravel", "Department", "EducationField",
"Gender", "JobRole", "MaritalStatus", "Over18", "OverTime")
hrdf[cols] <- lapply(hrdf[cols], factor)
#remove variables that add should add no info unless leakage (employee count, etc.)
hrdf <- subset(hrdf, select = -c(EmployeeCount, EmployeeNumber, Over18, StandardHours))
```
---
#### Quick overview of attrition distribution - It appears to be fairly unbalanced, with only 16% of the data a "yes".
```{r}
#plot attrition - unbalanced data with only 16% yes
hrdf %>% ggplot(aes(x = Attrition, fill = Attrition)) + geom_bar() +
theme_stata() + ggtitle("Employee Attrition (Count)") + ylab("Employee Count") +
scale_fill_stata()
hrdf %>% group_by(Attrition) %>% summarize(count = n()) %>% mutate(pct=round(prop.table(count),2) * 100) %>%
ggplot(aes(x = Attrition, y = pct, fill = Attrition)) + geom_bar(stat = 'identity') +
theme_stata() + ggtitle("Employee Attrition (%)") + ylab("Attrition %") +
geom_text(aes(x=Attrition, y=0.01, label= sprintf("%.2f%%", pct)),
hjust=0.5, vjust=-3, size=4,
colour="black", fontface="bold") + labs(x="Employee Attrition", y="Percentage") +
scale_fill_stata()
```
---
### Create Functions for EDA
```{r}
bar_plot_check <- function(x, y){
x <- enquo(x)
y <- enquo(y)
varName <- as_label(enquo(x))
varName <- str_to_title(str_replace(varName, "Group", ""))
plot1 <- hrdf %>% group_by(!!x) %>% summarize(count = n()) %>% mutate(pct=round(prop.table(count),2) * 100) %>%
ggplot(aes(x = !!x, y = count, fill = !!x)) + geom_bar(stat = 'identity', position = 'dodge', alpha = .7) +
theme_stata() + ggtitle(glue("{varName} Distribution")) + ylab("Count") +
geom_text(aes(x = !!x, y=0.01, label= sprintf("%.2f%%", pct)),
hjust=0.5, vjust=-3, size=4, position = position_dodge(0.9),
colour="black", fontface="bold") + labs(x =glue("{varName}"), y="Count") +
scale_fill_stata()
plot2 <-
hrdf %>% group_by(!!x, !!y) %>% summarize(count = n()) %>% mutate(pct=round(prop.table(count),2) * 100) %>%
ggplot(aes(x = !!x, y = pct, fill = !!y)) + geom_bar(stat = 'identity', position = 'dodge', alpha = .7) +
theme_stata() + ggtitle(glue("Attrition % by {varName}")) + ylab("Attrition %") +
geom_text(aes(x = !!x, y=0.01, label= sprintf("%.2f%%", pct)),
hjust=0.5, vjust=-3, size=4, position = position_dodge(0.9),
colour="black", fontface="bold") + labs(x =glue("{varName}"), y="Attrition %") +
scale_fill_stata()
print(plot1)
print(plot2)
}
box_plot_check <- function(x, y, title){
x <- enquo(x)
y <- enquo(y)
varName <- as_label(enquo(x))
varName <- str_to_title(str_replace(varName, "Group", ""))
plot <- hrdf %>%
ggplot(aes(x = !!y, y = !!x, fill = !!y)) + geom_boxplot(alpha = .7) +
geom_jitter(color = 'black', size = .4) +
theme_stata() + ggtitle(title) + ylab(glue("{varName}")) +
scale_fill_stata()
print(plot)
}
```
---
# Exploratory Data Analysis:
### Income
Higher income seems to be associated with less attrition.
```{r}
#income - higher income seems to be less associated with less attrition
hrdf %>% select(Attrition, MonthlyIncome) %>% group_by(Attrition) %>% skim()
box_plot_check(MonthlyIncome, Attrition, "Monthly Income by Attrition")
```
---
### Travel
Fairly unbalanced, most people in "travel rarely" category, but those who travel frequently quit at higher rate - as expected.
```{r}
hrdf %>% group_by(BusinessTravel) %>% summarize(count = n())
bar_plot_check(BusinessTravel, Attrition)
```
---
### Distance from home
Higher distance appears related to more attrition, but no visual evidence of strong relationship, more variance with attrition.
```{r}
hrdf %>% select(Attrition, DistanceFromHome) %>% group_by(Attrition) %>% skim()
box_plot_check(DistanceFromHome, Attrition, "Distance from Home by Attrition")
```
---
### Education
Low # of level five education, that does not appear to be much different attrition than level 4, so grouping together for a potential increase in degrees of freedom.
Higher education has less attrition, probably correlated with income, etc.
Education field has unbalanced distributions, so while HR field has the highest attrition rate, with a count of 15, it is probably not a very accurate measure to use.
```{r}
hrdf %>% group_by(Education) %>% summarize(count = n())
bar_plot_check(Education, Attrition)
#grouping 4 and 5 together
hrdf$GroupEducation <- ifelse(hrdf$Education %in% c(4,5), "4+",
hrdf$Education)
bar_plot_check(GroupEducation, Attrition)
hrdf %>% group_by(EducationField) %>% summarize(count = n())
bar_plot_check(EducationField, Attrition)
```
---
### Age
Grouping into factor, taking into account distribution but also intuition about ages of "early career". Attrition seems to decrease as age increases, with the 25 and under bracket leaving at significantly higher rates than others. Age probably also correlated with income.
```{r}
summary(hrdf$Age)
box_plot_check(Age, Attrition, "Age")
hrdf$GroupAge = cut(hrdf$Age, breaks = c(-1, 25.1, 35.1, 45.1, 100), labels = c("18-25","26-35","35-45","46+"))
bar_plot_check(GroupAge, Attrition)
```
---
### Department + Job Role
Highest turnover in Sales Dpt, lowest in R&D. Correlates well with Job Roles, with Sales Reps having almost 50% turnover.
```{r}
hrdf %>% group_by(Department) %>% summarize(count = n())
hrdf %>% group_by(JobRole) %>% summarize(count = n())
bar_plot_check(Department, Attrition)
hrdf %>% group_by(JobRole) %>% summarize(count = n()) %>% mutate(pct=round(prop.table(count),2) * 100) %>%
ggplot(aes(x = JobRole, y = count, fill = JobRole)) + geom_bar(stat = 'identity', position = 'dodge', alpha = .7) +
theme_stata() + ggtitle(glue("Job Role Distribution")) + ylab("Count") +
geom_text(aes(x = JobRole, y=0.01, label= sprintf("%.2f%%", pct)),
hjust=0.5, vjust=-3, size=4, position = position_dodge(0.9),
colour="black", fontface="bold") + labs(x = 'Job Role', y="Count") +
scale_fill_stata() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
hrdf %>% group_by(JobRole, Attrition) %>% summarize(count = n()) %>% mutate(pct=round(prop.table(count),2) * 100) %>%
ggplot(aes(x = JobRole, y = pct, fill = Attrition)) + geom_bar(stat = 'identity', position = 'dodge', alpha = .7) +
theme_stata() + ggtitle(glue("Attrition % by Job Role")) + ylab("Attrition %") +
geom_text(aes(x = JobRole, y=0.01, label= sprintf("%.2f%%", pct)),
hjust=0.5, vjust=-3, size=3, position = position_dodge(0.9),
colour="black", fontface="bold") + labs(x = 'Job Role', y="Attrition %") +
scale_fill_stata() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
jobdf <- hrdf %>% select(JobRole, JobSatisfaction, WorkLifeBalance, MonthlyIncome, EnvironmentSatisfaction, GroupEducation)
jobdf %>% ggplot(aes(x = MonthlyIncome)) + geom_boxplot()
jobdf %>% ggplot(aes(x = MonthlyIncome)) + geom_boxplot() + facet_wrap(~JobRole)
jobdf %>% ggplot(aes(x = JobSatisfaction)) + geom_histogram()
jobdf %>% ggplot(aes(x = JobSatisfaction)) + geom_histogram(stat = count)
jobdf %>% ggplot(aes(x = JobSatisfaction)) + geom_histogram(stat = 'count')
jobdf %>% ggplot(aes(x = MonthlyIncome, fill = JobRole)) + geom_boxplot() + facet_wrap(~JobRole)
jobdf %>% ggplot(aes(x = MonthlyIncome, fill = JobRole)) + geom_boxplot() + facet_wrap(~JobRole) +
theme_stata() + scale_fill_stata() + ggtitle("Income Distribution by Role")
jobdf %>% ggplot(aes(x = reorder(MonthlyIncome, mean(MonthlyIncome)), fill = JobRole)) + geom_boxplot() + facet_wrap(~JobRole) +
theme_stata() + scale_fill_stata() + ggtitle("Income Distribution by Role")
jobdf %>% ggplot(aes(x = reorder(MonthlyIncome, mean(MonthlyIncome)), fill = JobRole)) + geom_boxplot() +
theme_stata() + scale_fill_stata() + ggtitle("Income Distribution by Role")
jobdf %>% ggplot(aes(x = (MonthlyIncome), fill = JobRole)) + geom_boxplot() +
theme_stata() + scale_fill_stata() + ggtitle("Income Distribution by Role")
jobdf %>% ggplot(aes(x = (MonthlyIncome), fill = reorder(JobRole, mean(MonthlyIncome))) + geom_boxplot() +
jobdf %>% ggplot(aes(x = (MonthlyIncome), fill = reorder(JobRole, mean(MonthlyIncome)))) + geom_boxplot() +
theme_stata() + scale_fill_stata() + ggtitle("Income Distribution by Role")
jobdf %>% ggplot(aes(x = (MonthlyIncome), fill = reorder(JobRole, mean(MonthlyIncome)))) + geom_boxplot() +
theme_stata() + scale_fill_stata() + ggtitle("Income Distribution by Role")
jobdf %>% ggplot(aes(x = reorder(MonthlyIncome, JobRole, mean), fill = JobRole)) + geom_boxplot() +
theme_stata() + scale_fill_stata() + ggtitle("Income Distribution by Role")
jobdf %>% ggplot(aes(x = reorder(MonthlyIncome, MonthlyIncome, mean), fill = JobRole)) + geom_boxplot() +
theme_stata() + scale_fill_stata() + ggtitle("Income Distribution by Role")
jobdf %>% ggplot(aes(x = reorder(MonthlyIncome, MonthlyIncome, mean), fill = JobRole)) + geom_boxplot() +
theme_stata() + scale_fill_stata() + ggtitle("Income Distribution by Role")
jobdf %>% ggplot(aes(x = MonthlyIncome, fill = JobRole)) + geom_boxplot() +
theme_stata() + scale_fill_stata() + ggtitle("Income Distribution by Role")
jobdf %>% ggplot(aes(x = MonthlyIncome, fill = reorder(JobRole, MonthlyIncome, mean))) + geom_boxplot() +
theme_stata() + scale_fill_stata() + ggtitle("Income Distribution by Role")
jobdf %>% ggplot(aes(x = MonthlyIncome, fill = reorder(JobRole, MonthlyIncome, mean))) + geom_boxplot() +
theme_stata() + scale_fill_stata() + ggtitle("Income Distribution by Role") + guides(fill=guide_legend(title="New Legend Title"))
jobdf %>% ggplot(aes(x = MonthlyIncome, fill = reorder(JobRole, MonthlyIncome, mean))) + geom_boxplot() +
theme_stata() + scale_fill_stata() + ggtitle("Income Distribution by Role") + guides(fill=guide_legend(title="Job Role"))
jobdf %>% ggplot(aes(x = JobSatisfaction)) + geom_histogram(stat = 'count')
jobdf %>% ggplot(aes(x = JobSatisfaction, fill = JobRole)) + geom_histogram(stat = 'count')
jobdf %>% ggplot(aes(x = JobSatisfaction, fill = JobRole)) + geom_histogram(stat = 'count') + facet_wrap(~JobRole)
jobdf %>% group_by(JobSatisfaction, JobRole) %>% summarize(count = n()) %>% mutate(pct=round(prop.table(count),2) * 100) %>%
ggplot(aes(x = JobSatisfaction, y = pct, fill = JobRole)) + geom_bar(stat = 'identity', position = 'dodge', alpha = .7) +
theme_stata() + ggtitle(glue("Attrition % by Job Role")) + ylab("Attrition %") +
geom_text(aes(x = JobRole, y=0.01, label= sprintf("%.2f%%", pct)),
hjust=0.5, vjust=-3, size=3, position = position_dodge(0.9),
colour="black", fontface="bold") + labs(x = 'Job Role', y="Attrition %") +
scale_fill_stata() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
jobdf %>% group_by(JobSatisfaction, JobRole) %>% summarize(count = n()) %>% mutate(pct=round(prop.table(count),2) * 100) %>%
ggplot(aes(x = JobSatisfaction, y = pct, fill = JobRole)) + geom_bar(stat = 'identity', position = 'dodge', alpha = .7) +
theme_stata() + ggtitle(glue("Attrition % by Job Role")) + ylab("Attrition %") +
scale_fill_stata() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
jobdf %>% ggplot(aes(x = JobSatisfaction, fill = JobRole)) + geom_histogram(stat = 'count') + facet_wrap(~JobRole)
jobdf %>% group_by(JobSatisfaction, JobRole) %>% summarize(count = n()) %>% mutate(pct=round(prop.table(count),2) * 100) %>%
ggplot(aes(x = JobSatisfaction, y = pct, fill = JobRole)) + geom_bar(stat = 'identity', position = 'dodge', alpha = .7) +
theme_stata() + ggtitle(glue("Attrition % by Job Role")) + ylab("Attrition %") +
scale_fill_stata() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
jobdf %>% group_by(JobSatisfaction, JobRole) %>% summarize(count = n()) %>% mutate(pct=round(prop.table(count),2) * 100) %>%
ggplot(aes(x = JobSatisfaction, y = pct, fill = JobRole)) + geom_bar(stat = 'identity', position = 'dodge', alpha = .7) +
theme_stata() + ggtitle(glue("Attrition % by Job Role")) + ylab("Attrition %") + facet_wrap(~JobRole)
scale_fill_stata()
jobdf %>% group_by(JobSatisfaction, JobRole) %>% summarize(count = n()) %>% mutate(pct=round(prop.table(count),2) * 100) %>%
ggplot(aes(x = JobSatisfaction, y = pct, fill = JobRole)) + geom_bar(stat = 'identity', position = 'dodge', alpha = .7) +
theme_stata() + ggtitle(glue("Attrition % by Job Role")) + ylab("Attrition %") + facet_wrap(~JobRole)
jobdf %>% group_by(JobSatisfaction, JobRole) %>% summarize(count = n()) %>% mutate(pct=round(prop.table(count),2) * 100) %>%
ggplot(aes(x = JobSatisfaction, y = pct, fill = JobRole)) + geom_bar(stat = 'identity', position = 'dodge', alpha = .7) +
theme_stata() + ggtitle(glue("Attrition % by Job Role")) + ylab("Attrition %") + facet_wrap(~JobRole) + scale_fill_stata()
jobdf %>% group_by(JobSatisfaction, JobRole) %>% summarize(count = n()) %>% mutate(pct=round(prop.table(count),2) * 100) %>%
ggplot(aes(x = JobSatisfaction, y = pct, fill = JobRole)) + geom_bar(stat = 'identity', position = 'dodge', alpha = .7) +
theme_stata() + ggtitle(glue("Job Satisfaction % by Job Role")) + ylab("Satisfaction %") + facet_wrap(~JobRole) + scale_fill_stata()
jobdf %>% group_by(JobSatisfaction, JobRole) %>% summarize(count = n()) %>% mutate(pct=round(prop.table(count),2) * 100)
testdf <- jobdf %>% group_by(JobSatisfaction, JobRole) %>% summarize(count = n()) %>% mutate(pct=round(prop.table(count),2) * 100)
View(testdf)
testdf <- jobdf %>% group_by(JobRole, JobSatisfaction) %>% summarize(count = n()) %>% mutate(pct=round(prop.table(count),2) * 100)
View(testdf)
jobdf %>% group_by(JobRole, JobSatisfaction) %>% summarize(count = n()) %>% mutate(pct=round(prop.table(count),2) * 100) %>%
ggplot(aes(x = JobSatisfaction, y = pct, fill = JobRole)) + geom_bar(stat = 'identity', position = 'dodge', alpha = .7) +
theme_stata() + ggtitle(glue("Job Satisfaction % by Job Role")) + ylab("Satisfaction %") + facet_wrap(~JobRole) + scale_fill_stata()
View(jobdf)
jobdf %>% group_by(JobRole, WorkLifeBalance) %>% summarize(count = n()) %>% mutate(pct=round(prop.table(count),2) * 100) %>%
ggplot(aes(x = WorkLifeBalance, y = pct, fill = JobRole)) + geom_bar(stat = 'identity', position = 'dodge', alpha = .7) +
theme_stata() + ggtitle(glue("Work Life Balance % by Job Role")) + ylab("Work Life Balance %") + facet_wrap(~JobRole) + scale_fill_stata()
jobdf %>% group_by(JobRole, EnvironmentalSatisfaction) %>% summarize(count = n()) %>% mutate(pct=round(prop.table(count),2) * 100) %>%
ggplot(aes(x =EnvironmentalSatisfaction, y = pct, fill = JobRole)) + geom_bar(stat = 'identity', position = 'dodge', alpha = .7) +
theme_stata() + ggtitle(glue("Environmental Satisfaction % by Job Role")) + ylab("Environmental Satisfaction %") + facet_wrap(~JobRole) + scale_fill_stata()
jobdf %>% group_by(JobRole, EnvironmentSatisfaction) %>% summarize(count = n()) %>% mutate(pct=round(prop.table(count),2) * 100) %>%
ggplot(aes(x =EnvironmentSatisfaction, y = pct, fill = JobRole)) + geom_bar(stat = 'identity', position = 'dodge', alpha = .7) +
theme_stata() + ggtitle(glue("Environment Satisfaction % by Job Role")) + ylab("Environment Satisfaction %") + facet_wrap(~JobRole) + scale_fill_stata()
jobdf %>% group_by(JobRole, GroupEducation) %>% summarize(count = n()) %>% mutate(pct=round(prop.table(count),2) * 100) %>%
ggplot(aes(x = GroupEducation, y = pct, fill = JobRole)) + geom_bar(stat = 'identity', position = 'dodge', alpha = .7) +
theme_stata() + ggtitle(glue("Education % by Job Role")) + ylab("Education %") + facet_wrap(~JobRole) + scale_fill_stata()
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE,
fig.width = 10,
fig.asp = 0.618,
out.width = "80%",
fig.align = "center",
message = FALSE,
warning = FALSE)
# Chunk 2
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(skimr)
library(GGally)
library(viridis)
library(corrplot)
library(glue)
library(class)
library(caret)
library(e1071)
# Chunk 3
#load in hr data
hrdf <- read.csv('Data/CaseStudy2-data.csv')
#check for NA, get familiar with distributions
skim(hrdf)
# Changing the datatype to factors for relevant variables
cols <- c("Education", "EnvironmentSatisfaction", "JobInvolvement", "JobLevel",
"JobSatisfaction", "PerformanceRating", "RelationshipSatisfaction",
"StockOptionLevel", "TrainingTimesLastYear", "WorkLifeBalance",
"Attrition", "BusinessTravel", "Department", "EducationField",
"Gender", "JobRole", "MaritalStatus", "Over18", "OverTime")
hrdf[cols] <- lapply(hrdf[cols], factor)
#remove variables that add should add no info unless leakage (employee count, etc.)
hrdf <- subset(hrdf, select = -c(EmployeeCount, EmployeeNumber, Over18, StandardHours))
# Chunk 4
#plot attrition - unbalanced data with only 16% yes
hrdf %>% ggplot(aes(x = Attrition, fill = Attrition)) + geom_bar() +
theme_stata() + ggtitle("Employee Attrition (Count)") + ylab("Employee Count") +
scale_fill_stata()
hrdf %>% group_by(Attrition) %>% summarize(count = n()) %>% mutate(pct=round(prop.table(count),2) * 100) %>%
ggplot(aes(x = Attrition, y = pct, fill = Attrition)) + geom_bar(stat = 'identity') +
theme_stata() + ggtitle("Employee Attrition (%)") + ylab("Attrition %") +
geom_text(aes(x=Attrition, y=0.01, label= sprintf("%.2f%%", pct)),
hjust=0.5, vjust=-3, size=4,
colour="black", fontface="bold") + labs(x="Employee Attrition", y="Percentage") +
scale_fill_stata()
# Chunk 5
bar_plot_check <- function(x, y){
x <- enquo(x)
y <- enquo(y)
varName <- as_label(enquo(x))
varName <- str_to_title(str_replace(varName, "Group", ""))
plot1 <- hrdf %>% group_by(!!x) %>% summarize(count = n()) %>% mutate(pct=round(prop.table(count),2) * 100) %>%
ggplot(aes(x = !!x, y = count, fill = !!x)) + geom_bar(stat = 'identity', position = 'dodge', alpha = .7) +
theme_stata() + ggtitle(glue("{varName} Distribution")) + ylab("Count") +
geom_text(aes(x = !!x, y=0.01, label= sprintf("%.2f%%", pct)),
hjust=0.5, vjust=-3, size=4, position = position_dodge(0.9),
colour="black", fontface="bold") + labs(x =glue("{varName}"), y="Count") +
scale_fill_stata()
plot2 <-
hrdf %>% group_by(!!x, !!y) %>% summarize(count = n()) %>% mutate(pct=round(prop.table(count),2) * 100) %>%
ggplot(aes(x = !!x, y = pct, fill = !!y)) + geom_bar(stat = 'identity', position = 'dodge', alpha = .7) +
theme_stata() + ggtitle(glue("Attrition % by {varName}")) + ylab("Attrition %") +
geom_text(aes(x = !!x, y=0.01, label= sprintf("%.2f%%", pct)),
hjust=0.5, vjust=-3, size=4, position = position_dodge(0.9),
colour="black", fontface="bold") + labs(x =glue("{varName}"), y="Attrition %") +
scale_fill_stata()
print(plot1)
print(plot2)
}
box_plot_check <- function(x, y, title){
x <- enquo(x)
y <- enquo(y)
varName <- as_label(enquo(x))
varName <- str_to_title(str_replace(varName, "Group", ""))
plot <- hrdf %>%
ggplot(aes(x = !!y, y = !!x, fill = !!y)) + geom_boxplot(alpha = .7) +
geom_jitter(color = 'black', size = .4) +
theme_stata() + ggtitle(title) + ylab(glue("{varName}")) +
scale_fill_stata()
print(plot)
}
# Chunk 6
#income - higher income seems to be less associated with less attrition
hrdf %>% select(Attrition, MonthlyIncome) %>% group_by(Attrition) %>% skim()
box_plot_check(MonthlyIncome, Attrition, "Monthly Income by Attrition")
# Chunk 7
hrdf %>% group_by(BusinessTravel) %>% summarize(count = n())
bar_plot_check(BusinessTravel, Attrition)
# Chunk 8
hrdf %>% select(Attrition, DistanceFromHome) %>% group_by(Attrition) %>% skim()
box_plot_check(DistanceFromHome, Attrition, "Distance from Home by Attrition")
# Chunk 9
hrdf %>% group_by(Education) %>% summarize(count = n())
bar_plot_check(Education, Attrition)
#grouping 4 and 5 together
hrdf$GroupEducation <- ifelse(hrdf$Education %in% c(4,5), "4+",
hrdf$Education)
bar_plot_check(GroupEducation, Attrition)
hrdf %>% group_by(EducationField) %>% summarize(count = n())
bar_plot_check(EducationField, Attrition)
# Chunk 10
summary(hrdf$Age)
box_plot_check(Age, Attrition, "Age")
hrdf$GroupAge = cut(hrdf$Age, breaks = c(-1, 25.1, 35.1, 45.1, 100), labels = c("18-25","26-35","35-45","46+"))
bar_plot_check(GroupAge, Attrition)
# Chunk 11
hrdf %>% group_by(Department) %>% summarize(count = n())
hrdf %>% group_by(JobRole) %>% summarize(count = n())
bar_plot_check(Department, Attrition)
hrdf %>% group_by(JobRole) %>% summarize(count = n()) %>% mutate(pct=round(prop.table(count),2) * 100) %>%
ggplot(aes(x = JobRole, y = count, fill = JobRole)) + geom_bar(stat = 'identity', position = 'dodge', alpha = .7) +
theme_stata() + ggtitle(glue("Job Role Distribution")) + ylab("Count") +
geom_text(aes(x = JobRole, y=0.01, label= sprintf("%.2f%%", pct)),
hjust=0.5, vjust=-3, size=4, position = position_dodge(0.9),
colour="black", fontface="bold") + labs(x = 'Job Role', y="Count") +
scale_fill_stata() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
hrdf %>% group_by(JobRole, Attrition) %>% summarize(count = n()) %>% mutate(pct=round(prop.table(count),2) * 100) %>%
ggplot(aes(x = JobRole, y = pct, fill = Attrition)) + geom_bar(stat = 'identity', position = 'dodge', alpha = .7) +
theme_stata() + ggtitle(glue("Attrition % by Job Role")) + ylab("Attrition %") +
geom_text(aes(x = JobRole, y=0.01, label= sprintf("%.2f%%", pct)),
hjust=0.5, vjust=-3, size=3, position = position_dodge(0.9),
colour="black", fontface="bold") + labs(x = 'Job Role', y="Attrition %") +
scale_fill_stata() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
jobdf <- hrdf %>% select(JobRole, JobSatisfaction, WorkLifeBalance, MonthlyIncome, EnvironmentSatisfaction, GroupEducation)
jobdf %>% ggplot(aes(x = MonthlyIncome, fill = reorder(JobRole, MonthlyIncome, mean))) + geom_boxplot() +
theme_stata() + scale_fill_stata() + ggtitle("Income Distribution by Role") + guides(fill=guide_legend(title="Job Role"))
jobdf %>% group_by(JobRole, JobSatisfaction) %>% summarize(count = n()) %>% mutate(pct=round(prop.table(count),2) * 100) %>%
ggplot(aes(x = JobSatisfaction, y = pct, fill = JobRole)) + geom_bar(stat = 'identity', position = 'dodge', alpha = .7) +
theme_stata() + ggtitle(glue("Job Satisfaction % by Job Role")) + ylab("Satisfaction %") + facet_wrap(~JobRole) + scale_fill_stata()
jobdf %>% group_by(JobRole, WorkLifeBalance) %>% summarize(count = n()) %>% mutate(pct=round(prop.table(count),2) * 100) %>%
ggplot(aes(x = WorkLifeBalance, y = pct, fill = JobRole)) + geom_bar(stat = 'identity', position = 'dodge', alpha = .7) +
theme_stata() + ggtitle(glue("Work Life Balance % by Job Role")) + ylab("Work Life Balance %") + facet_wrap(~JobRole) + scale_fill_stata()
jobdf %>% group_by(JobRole, EnvironmentSatisfaction) %>% summarize(count = n()) %>% mutate(pct=round(prop.table(count),2) * 100) %>%
ggplot(aes(x =EnvironmentSatisfaction, y = pct, fill = JobRole)) + geom_bar(stat = 'identity', position = 'dodge', alpha = .7) +
theme_stata() + ggtitle(glue("Environment Satisfaction % by Job Role")) + ylab("Environment Satisfaction %") + facet_wrap(~JobRole) + scale_fill_stata()
jobdf %>% group_by(JobRole, GroupEducation) %>% summarize(count = n()) %>% mutate(pct=round(prop.table(count),2) * 100) %>%
ggplot(aes(x = GroupEducation, y = pct, fill = JobRole)) + geom_bar(stat = 'identity', position = 'dodge', alpha = .7) +
theme_stata() + ggtitle(glue("Education % by Job Role")) + ylab("Education %") + facet_wrap(~JobRole) + scale_fill_stata()
# Chunk 12
bar_plot_check(Gender, Attrition)
bar_plot_check(MaritalStatus, Attrition)
hrdf %>% group_by(Gender, MaritalStatus, Attrition) %>% summarize(count = n()) %>% mutate(pct=round(prop.table(count),2) * 100) %>%
ggplot(aes(x = Gender, y = pct, fill = Attrition)) + geom_bar(stat = 'identity', position = 'dodge', alpha = .7) +
theme_stata() + ggtitle(glue("Attrition % by Job Role")) + ylab("Attrition %") +
geom_text(aes(x = Gender, y=0.01, label= sprintf("%.2f%%", pct)),
hjust=0.5, vjust=-3, size=3, position = position_dodge(0.9),
colour="black", fontface="bold") + labs(x = 'Gender', y="Attrition %") +
scale_fill_stata() + facet_wrap(~MaritalStatus)
# Chunk 13
#ggally with rates to get a better idea what relationship is or is not
hrdf %>% select(DailyRate, HourlyRate, MonthlyRate, MonthlyIncome, Attrition) %>% ggpairs()
box_plot_check(HourlyRate, Attrition, "Hourly Rate by Attrition")
box_plot_check(DailyRate, Attrition, "Daily Rate by Attrition")
box_plot_check(MonthlyRate, Attrition, "Monthly Rate by Attrition")
# Chunk 14
bar_plot_check(EnvironmentSatisfaction, Attrition)
bar_plot_check(JobSatisfaction, Attrition)
bar_plot_check(RelationshipSatisfaction, Attrition)
bar_plot_check(WorkLifeBalance, Attrition)
bar_plot_check(JobInvolvement, Attrition)
# Chunk 15
box_plot_check(YearsWithCurrManager, Attrition, "Years with current Mgr by Attrition")
box_plot_check(YearsSinceLastPromotion, Attrition, "Years since last promotion by Attrition")
box_plot_check(YearsInCurrentRole, Attrition, "Years in current role by Attrition")
box_plot_check(YearsAtCompany, Attrition, "Years spent at company by Attrition")
box_plot_check(NumCompaniesWorked, Attrition, "Total # of Companies worked by Attrition")
# Chunk 16
bar_plot_check(StockOptionLevel, Attrition)
bar_plot_check(PerformanceRating, Attrition)
bar_plot_check(OverTime, Attrition)
# Chunk 17
hrdf %>% ggplot(aes(x = Department, y = MonthlyIncome, fill = Department)) +
geom_boxplot(alpha = .7) + geom_hline(aes(yintercept = median(MonthlyIncome), color = 'red')) +
theme_stata() + scale_fill_stata()
hrdf %>% ggplot(aes(x = JobLevel, y = MonthlyIncome, fill = JobLevel)) +
geom_boxplot(alpha = .7) + geom_hline(aes(yintercept = median(MonthlyIncome), color = 'red')) +
theme_stata() + scale_fill_stata()
# Chunk 18
set.seed(44)
cleandf <- subset(hrdf, select = -c(DailyRate, HourlyRate, MonthlyRate, ID, Age, Education))
# control settings for KNN
# NOTE: needed in order to focus on specificity
train.knn <- trainControl(
method = "repeatedcv",
number = 5,
repeats = 100,
summaryFunction = twoClassSummary,
classProbs = TRUE,
p = .75
)
# KNN on Training Set
attrition.knn <- train(
Attrition ~ .,
data = cleandf,
method = "knn",
metric = "Spec",
trControl = train.knn,
preProcess = c("center","scale"),
tuneLength = 6
)
# Adding predictions to df
cleandf$KNN_Pred <- predict(attrition.knn, newdata = cleandf)
# creating confusion matrix
confusionMatrix(table(cleandf$Attrition, cleandf$KNN_Pred))
# Chunk 19
cleandf$logIncome <- log(cleandf$MonthlyIncome)
cleandf2 <- subset(cleandf,select = -c(KNN_Pred, MonthlyIncome))
iterations = 100
masterAcc = matrix(nrow = iterations)
masterSens = matrix(nrow = iterations)
masterSpec = matrix(nrow = iterations)
for(j in 1:iterations)
{
trainIndices = sample(seq(1:length(cleandf2$Attrition)),round(.75*length(cleandf2$Attrition)))
trainNaive = cleandf2[trainIndices,]
testNaive = cleandf2[-trainIndices,]
model = naiveBayes(trainNaive[,-1], trainNaive$Attrition)
CM = confusionMatrix(table(predict(model,testNaive[,-1]), testNaive$Attrition))
masterAcc[j] = CM$overall[1]
masterSens[j] = CM$byClass[1]
masterSpec[j] = CM$byClass[2]
}
MeanAcc = colMeans(masterAcc)
MeanSens <- colMeans(masterSens)
MeanSpec <- colMeans(masterSpec)
MeanAcc
MeanSens
MeanSpec
# Chunk 20
cleandf3 <- subset(cleandf,select = -c(KNN_Pred))
fit <- lm(MonthlyIncome ~ ., data = cleandf3)
summary(fit)
fit2 <- lm(MonthlyIncome ~ TotalWorkingYears + JobRole + JobLevel + BusinessTravel, data = cleandf3)
summary(fit2)
#check assumptions, violation of normality at upper bounds, otherwise great
par(mfrow = c(2, 2))
plot(fit2)
# Chunk 21
#calculate RMSE
sqrt(mean(fit2$residuals^2))
# Chunk 22
#cor testing
nums <- select_if(hrdf, is.numeric)
corr <- round(cor(nums), 1)
corrplot(corr,
type = "lower",
method="number")
sqrt(mean(fit2$residuals^2))
fit2$residuals
fit2$residuals
fit$residuals
View(fit)
